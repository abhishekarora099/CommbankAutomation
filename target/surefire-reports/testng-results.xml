<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="3" failed="1" total="5" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="20663" started-at="2020-08-25T06:05:46Z" finished-at="2020-08-25T06:06:07Z">
    <groups>
    </groups>
    <test name="Test APMLSA" duration-ms="20663" started-at="2020-08-25T06:05:46Z" finished-at="2020-08-25T06:06:07Z">
      <class name="com.siemens.APMLSA.automation.tests.AllTests">
        <test-method status="PASS" signature="initializeDriver()[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="initializeDriver" is-config="true" duration-ms="4964" started-at="2020-08-25T11:35:41Z" finished-at="2020-08-25T11:35:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeDriver -->
        <test-method status="PASS" signature="testInitialize()[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="testInitialize" is-config="true" duration-ms="4176" started-at="2020-08-25T11:35:46Z" finished-at="2020-08-25T11:35:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialize -->
        <test-method status="PASS" signature="extentLoggerInitializer(java.lang.reflect.Method)[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="extentLoggerInitializer" is-config="true" duration-ms="20" started-at="2020-08-25T11:35:51Z" finished-at="2020-08-25T11:35:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.siemens.APMLSA.automation.tests.AllTests.testLogin() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentLoggerInitializer -->
        <test-method status="PASS" signature="testLogin()[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="testLogin" duration-ms="11166" started-at="2020-08-25T11:35:51Z" finished-at="2020-08-25T11:36:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-08-25T11:36:02Z" finished-at="2020-08-25T11:36:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=SUCCESS method=AllTests.testLogin()[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="selectingFiltersInDashboard()[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="selectingFiltersInDashboard" duration-ms="1338" started-at="2020-08-25T11:36:02Z" finished-at="2020-08-25T11:36:03Z">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <button _ngcontent-rka-c102="" type="button" class="btn btn-outline-secondary rounded-0 sie-btn-cancel" aria-expanded="false">...</button> is not clickable at point (117, 427). Other element would receive the click: <div class="ui-blockui-document ui-blockui ui-widget-overlay" style="display: block; z-index: 100001002;">...</div>
  (Session info: chrome=84.0.4147.125)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MD2PYZ3C', ip: '192.168.219.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.125, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\z0046zwe\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:63494}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: e6793f647517d2cf8cb1d16b36e8ba48]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button _ngcontent-rka-c102="" type="button" class="btn btn-outline-secondary rounded-0 sie-btn-cancel" aria-expanded="false">...</button> is not clickable at point (117, 427). Other element would receive the click: <div class="ui-blockui-document ui-blockui ui-widget-overlay" style="display: block; z-index: 100001002;">...</div>
  (Session info: chrome=84.0.4147.125)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MD2PYZ3C', ip: '192.168.219.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.125, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\z0046zwe\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:63494}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: e6793f647517d2cf8cb1d16b36e8ba48
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
	at com.sun.proxy.$Proxy13.click(Unknown Source)
	at com.siemens.APMLSA.automation.utils.Utility.clickAction(Utility.java:53)
	at com.siemens.APMLSA.automation.pages.DashboardPage.clickOnFilter(DashboardPage.java:71)
	at com.siemens.APMLSA.automation.tests.AllTests.selectingFiltersInDashboard(AllTests.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectingFiltersInDashboard -->
        <test-method status="PASS" signature="extentLoggerInitializer(java.lang.reflect.Method)[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="extentLoggerInitializer" is-config="true" duration-ms="0" started-at="2020-08-25T11:36:02Z" finished-at="2020-08-25T11:36:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.siemens.APMLSA.automation.tests.AllTests.selectingFiltersInDashboard() throws java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentLoggerInitializer -->
        <test-method status="FAIL" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-08-25T11:36:03Z" finished-at="2020-08-25T11:36:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectingFiltersInDashboard status=FAILURE method=AllTests.selectingFiltersInDashboard()[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Unexpected result for screenshot command: null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Unexpected result for screenshot command: null
	at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:304)
	at com.siemens.APMLSA.automation.utils.Utility.takeScreenshot(Utility.java:25)
	at com.siemens.APMLSA.automation.tests.AllTests.tearDown(AllTests.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:786)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="GoldenBatchParameters()[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="GoldenBatchParameters" duration-ms="1" started-at="2020-08-25T11:36:07Z" finished-at="2020-08-25T11:36:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoldenBatchParameters -->
        <test-method status="SKIP" signature="extentLoggerInitializer(java.lang.reflect.Method)[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="extentLoggerInitializer" is-config="true" duration-ms="0" started-at="2020-08-25T11:36:07Z" finished-at="2020-08-25T11:36:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentLoggerInitializer -->
        <test-method status="SKIP" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-08-25T11:36:07Z" finished-at="2020-08-25T11:36:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-08-25T11:36:07Z" finished-at="2020-08-25T11:36:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="extentLoggerInitializer(java.lang.reflect.Method)[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="extentLoggerInitializer" is-config="true" duration-ms="0" started-at="2020-08-25T11:36:07Z" finished-at="2020-08-25T11:36:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentLoggerInitializer -->
        <test-method status="SKIP" signature="SystemConfig()[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="SystemConfig" duration-ms="0" started-at="2020-08-25T11:36:07Z" finished-at="2020-08-25T11:36:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SystemConfig -->
        <test-method status="SKIP" signature="extentLoggerInitializer(java.lang.reflect.Method)[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="extentLoggerInitializer" is-config="true" duration-ms="0" started-at="2020-08-25T11:36:07Z" finished-at="2020-08-25T11:36:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentLoggerInitializer -->
        <test-method status="SKIP" signature="UserConfig()[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="UserConfig" duration-ms="1" started-at="2020-08-25T11:36:07Z" finished-at="2020-08-25T11:36:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserConfig -->
        <test-method status="SKIP" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-08-25T11:36:07Z" finished-at="2020-08-25T11:36:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="closeBrowser()[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="closeBrowser" is-config="true" duration-ms="0" started-at="2020-08-25T11:36:07Z" finished-at="2020-08-25T11:36:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method status="SKIP" signature="testClosure()[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="testClosure" is-config="true" duration-ms="0" started-at="2020-08-25T11:36:07Z" finished-at="2020-08-25T11:36:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClosure -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.siemens.APMLSA.automation.tests.AllTests@617c74e5]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-08-25T11:36:07Z" finished-at="2020-08-25T11:36:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.siemens.APMLSA.automation.tests.AllTests -->
    </test> <!-- Test APMLSA -->
  </suite> <!-- Suite -->
</testng-results>
